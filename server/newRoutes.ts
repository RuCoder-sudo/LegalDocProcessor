import type { Express } from "express";
import { createServer, type Server } from "http";
import cookieParser from "cookie-parser";
import { setupJwtAuth } from "./simpleJwtAuth";
import { users, userDocuments, blogPosts, adminSettings } from "@shared/schema";
import { db } from "./db";
import { eq, desc } from "drizzle-orm";
import bcrypt from "bcryptjs";
import { requireAuth, requireAdmin } from "./authMiddleware";

export async function registerRoutes(app: Express): Promise<Server> {
  // Cookie parser middleware
  app.use(cookieParser());

  // CORS middleware для правильной работы с cookie
  app.use((req, res, next) => {
    res.header('Access-Control-Allow-Credentials', 'true');
    res.header('Access-Control-Allow-Origin', req.headers.origin || '*');
    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
    next();
  });

  // JWT Auth system
  setupJwtAuth(app);

  // Простой тест для проверки авторизации с JWT
  app.get('/api/test/login-admin', (req, res) => {
    // Принудительно логиним админа для тестирования
    const adminUser = {
      id: "admin_main",
      email: "rucoder.rf@yandex.ru",
      firstName: "Admin",
      lastName: "User",
      role: "admin",
      subscription: "premium",
      documentsCreated: 0,
      documentsLimit: -1
    };

    // Создаем простой токен
    const token = Buffer.from(JSON.stringify({
      id: adminUser.id,
      email: adminUser.email,
      role: adminUser.role
    })).toString('base64');

    // Устанавливаем cookie
    res.cookie('auth-token', token, {
      httpOnly: false,
      secure: false,
      maxAge: 24 * 60 * 60 * 1000,
      sameSite: 'lax'
    });
    
    console.log("TEST - Admin logged in with JWT token");
    console.log("Set cookie auth-token:", token);
    
    // Возвращаем токен в ответе для установки в заголовках
    res.json({ 
      message: "Test admin login successful with JWT", 
      user: adminUser,
      token: token
    });
  });

  // Тестовый эндпоинт для проверки JWT системы
  app.get('/api/test/auth', (req, res) => {
    const token = (req as any).cookies['auth-token'];
    let tokenData = null;
    
    if (token) {
      try {
        tokenData = JSON.parse(Buffer.from(token, 'base64').toString('utf8'));
      } catch (e) {
        // Invalid token
      }
    }
    
    res.json({
      message: "JWT Auth system is working",
      hasToken: !!token,
      tokenData: tokenData,
      cookies: req.headers.cookie
    });
  });

  // Получение документов пользователя
  app.get('/api/user/documents', async (req, res) => {
    try {
      const userId = (req as any).session?.userId;
      
      if (!userId) {
        return res.status(401).json({ message: "Unauthorized" });
      }

      const userDocs = await db
        .select()
        .from(userDocuments)
        .where(eq(userDocuments.userId, userId))
        .orderBy(desc(userDocuments.createdAt));

      res.json(userDocs);
    } catch (error) {
      console.error("Error fetching user documents:", error);
      res.status(500).json({ message: "Ошибка при загрузке документов" });
    }
  });

  // Blog posts (public)
  app.get('/api/blog', async (req, res) => {
    try {
      const posts = await db
        .select()
        .from(blogPosts)
        .where(eq(blogPosts.isPublished, true))
        .orderBy(desc(blogPosts.publishedAt))
        .limit(10);
      res.json(posts);
    } catch (error) {
      console.error("Error fetching blog posts:", error);
      res.status(500).json({ message: "Ошибка при загрузке новостей" });
    }
  });

  // Document templates (public)
  app.get('/api/templates', async (req, res) => {
    try {
      // For now, return empty array since we need to implement templates
      res.json([]);
    } catch (error) {
      console.error("Error fetching templates:", error);
      res.status(500).json({ message: "Ошибка при загрузке шаблонов" });
    }
  });

  // Create document - Теперь работает для всех пользователей
  app.post('/api/documents', async (req: any, res) => {
    try {
      console.log('Full request body:', req.body);
      
      const { type, ...formData } = req.body;
      
      // Получаем пользователя из сессии, если есть, иначе создаем временного пользователя
      let userId = (req as any).session?.userId;
      
      if (!userId) {
        // Создаем временного анонимного пользователя для демонстрации
        const tempUser = await db
          .insert(users)
          .values({
            id: `temp_${Date.now()}`,
            email: `temp_${Date.now()}@demo.com`,
            password: 'temp_password',
            firstName: 'Анонимный',
            lastName: 'Пользователь',
            role: 'user',
            subscription: 'free',
            documentsCreated: 0,
            documentsLimit: 10
          })
          .returning();
        
        userId = tempUser[0]?.id;
      } else {
        // Проверяем, существует ли пользователь в базе
        const existingUser = await db
          .select()
          .from(users)
          .where(eq(users.id, userId))
          .limit(1);

        if (existingUser.length === 0) {
          // Если пользователь не найден, создаем нового
          const newUser = await db
            .insert(users)
            .values({
              id: userId,
              email: `user_${userId}@demo.com`,
              firstName: 'Пользователь',
              lastName: 'Системы',
              role: 'user',
              subscription: 'free',
              documentsCreated: 0,
              documentsLimit: 10
            })
            .returning();
          
          userId = newUser[0]?.id;
        }
      }

      console.log('Extracted type:', type);
      console.log('Extracted formData:', formData);
      console.log('Using userId:', userId);

      // Check document limit
      const userDocCount = await db
        .select()
        .from(userDocuments)
        .where(eq(userDocuments.userId, userId));

      const user = await db
        .select()
        .from(users)
        .where(eq(users.id, userId))
        .limit(1);

      // Устанавливаем лимиты в зависимости от подписки
      let limit;
      if (user[0]?.role === 'admin') {
        limit = -1; // Безлимитно для админов
      } else if (user[0]?.subscription === 'premium') {
        limit = -1; // Безлимитно для премиум
      } else {
        limit = 2; // 2 документа для бесплатных пользователей
      }

      if (limit > 0 && userDocCount.length >= limit) {
        return res.status(403).json({ 
          message: `Достигнут лимит документов (${limit}). Обновитесь до премиум для безлимитного создания документов.`,
          code: "LIMIT_REACHED"
        });
      }

      // Generate document content with extracted form data
      let content = await generateDocumentContent(type, formData);
      
      // Добавляем водяной знак для бесплатных пользователей
      if (user[0]?.subscription !== 'premium') {
        content += '\n\n---\nДокумент создан с помощью ЮрДок Генератор (legalrfdocs.ru)\nДля удаления данной подписи и получения полного функционала обновитесь до премиум-плана.';
      }

      const result = await db
        .insert(userDocuments)
        .values({
          userId,
          name: `${getDocumentTypeName(type)} - ${formData.companyName}`,
          type,
          formData,
          generatedContent: content,
          status: 'completed'
        })
        .returning();

      const newDocument = result[0];

      // Обновляем счетчик документов пользователя
      await db
        .update(users)
        .set({ 
          documentsCreated: (user[0]?.documentsCreated || 0) + 1 
        })
        .where(eq(users.id, userId));

      res.json(newDocument);
    } catch (error) {
      console.error("Error creating document:", error);
      res.status(500).json({ message: "Ошибка при создании документа" });
    }
  });

  // Download PDF (с ограничениями для бесплатных пользователей)
  app.get('/api/documents/:id/pdf', async (req: any, res) => {
    try {
      const { id } = req.params;
      const userId = (req as any).session?.userId;
      
      if (!userId) {
        return res.status(401).json({ message: "Требуется авторизация для скачивания PDF" });
      }

      // Получаем пользователя
      const user = await db
        .select()
        .from(users)
        .where(eq(users.id, userId))
        .limit(1);

      if (!user[0]) {
        return res.status(404).json({ message: "Пользователь не найден" });
      }

      // Проверяем подписку для скачивания PDF
      if (user[0].subscription !== 'premium') {
        return res.status(403).json({ 
          message: "Скачивание PDF доступно только для премиум пользователей. Обновитесь до премиум-плана!",
          code: "PREMIUM_REQUIRED"
        });
      }

      // Получаем документ
      const document = await db
        .select()
        .from(userDocuments)
        .where(eq(userDocuments.id, parseInt(id)))
        .limit(1);

      if (!document[0] || document[0].userId !== userId) {
        return res.status(404).json({ message: "Документ не найден" });
      }

      res.json({ 
        message: "PDF генерация доступна в премиум версии",
        content: document[0].generatedContent 
      });
    } catch (error) {
      console.error("Error downloading PDF:", error);
      res.status(500).json({ message: "Ошибка при скачивании PDF" });
    }
  });

  // Get user documents (protected)
  app.get('/api/documents', requireAuth, async (req: any, res) => {
    try {
      const userId = req.user.id;
      const documents = await db
        .select()
        .from(userDocuments)
        .where(eq(userDocuments.userId, userId))
        .orderBy(desc(userDocuments.createdAt));

      res.json(documents);
    } catch (error) {
      console.error("Error fetching documents:", error);
      res.status(500).json({ message: "Ошибка при загрузке документов" });
    }
  });

  // Admin settings (protected - admin only)
  app.get('/api/admin/settings', requireAuth, requireAdmin, async (req: any, res) => {
    try {
      const settings = await db
        .select()
        .from(adminSettings)
        .limit(1);

      if (settings.length === 0) {
        // Create default settings
        const newSettings = await db
          .insert(adminSettings)
          .values({})
          .returning();
        return res.json(newSettings[0]);
      }

      res.json(settings[0]);
    } catch (error) {
      console.error("Error fetching admin settings:", error);
      res.status(500).json({ message: "Ошибка при загрузке настроек" });
    }
  });

  // Update admin settings (protected - admin only)
  app.put('/api/admin/settings', requireAuth, requireAdmin, async (req: any, res) => {
    try {
      const updates = req.body;
      
      const settings = await db
        .select()
        .from(adminSettings)
        .limit(1);

      if (settings.length === 0) {
        const newSettings = await db
          .insert(adminSettings)
          .values(updates)
          .returning();
        return res.json(newSettings[0]);
      }

      const updatedSettings = await db
        .update(adminSettings)
        .set(updates)
        .where(eq(adminSettings.id, settings[0].id))
        .returning();

      res.json(updatedSettings[0]);
    } catch (error) {
      console.error("Error updating admin settings:", error);
      res.status(500).json({ message: "Ошибка при обновлении настроек" });
    }
  });

  // Get all users (admin only)
  app.get('/api/admin/users', requireAuth, requireAdmin, async (req: any, res) => {
    try {
      const allUsers = await db
        .select()
        .from(users)
        .orderBy(desc(users.createdAt));

      // Remove passwords for security
      res.json(allUsers.map(user => ({ ...user, password: undefined })));
    } catch (error) {
      console.error("Error fetching users:", error);
      res.status(500).json({ message: "Ошибка при загрузке пользователей" });
    }
  });

  // Update user role (admin only)
  app.put('/api/admin/users/:userId/role', requireAuth, requireAdmin, async (req: any, res) => {
    try {
      const { userId } = req.params;
      const { role } = req.body;

      if (!['user', 'admin'].includes(role)) {
        return res.status(400).json({ message: "Недопустимая роль" });
      }

      const user = await db
        .select()
        .from(users)
        .where(eq(users.id, userId))
        .limit(1);

      if (user.length === 0) {
        return res.status(404).json({ message: "Пользователь не найден" });
      }

      const updatedUser = await db
        .update(users)
        .set({ role })
        .where(eq(users.id, userId))
        .returning();

      res.json({ ...updatedUser[0], password: undefined });
    } catch (error) {
      console.error("Error updating user role:", error);
      res.status(500).json({ message: "Ошибка при обновлении роли пользователя" });
    }
  });

  // Get admin stats (admin only)
  app.get('/api/admin/stats', requireAuth, requireAdmin, async (req: any, res) => {
    try {
      const allUsers = await db.select().from(users);
      const totalUsers = allUsers.length;
      const premiumUsers = allUsers.filter(u => u.subscription === 'premium').length;
      const documentsCreated = allUsers.reduce((sum, u) => sum + (u.documentsCreated || 0), 0);

      res.json({
        totalUsers,
        premiumUsers,
        documentsCreated
      });
    } catch (error) {
      console.error("Error fetching admin stats:", error);
      res.status(500).json({ message: "Ошибка при загрузке статистики" });
    }
  });

  const httpServer = createServer(app);
  return httpServer;
}

// Helper functions for document generation
function getDocumentTypeName(type: string): string {
  const typeNames: Record<string, string> = {
    'privacy-policy': 'Политика конфиденциальности',
    'terms-of-service': 'Пользовательское соглашение',
    'job-offer': 'Предложение о работе',
    'invoice': 'Счет на оплату',
    'legal-contract': 'Юридический договор',
    'employment-contract': 'Трудовой договор',
    'nda': 'Соглашение о неразглашении'
  };
  return typeNames[type] || 'Документ';
}

async function generateDocumentContent(type: string, formData: any): Promise<string> {
  // Простая реализация генерации контента на основе типа документа
  switch (type) {
    case 'privacy-policy':
      return `ПОЛИТИКА КОНФИДЕНЦИАЛЬНОСТИ
${formData.companyName || 'Компания'}
      
1. ОБЩИЕ ПОЛОЖЕНИЯ

1.1. Настоящая Политика конфиденциальности (далее — Политика) является официальным документом ${formData.companyName || 'Компании'}, расположенного по адресу: ${formData.address || 'адрес компании'}, и определяет порядок обработки и защиты информации о физических лицах, пользующихся услугами интернет-сайта ${formData.website || 'website.com'} (далее — Сайт).

1.2. Целью настоящей Политики является обеспечение надлежащей защиты информации о пользователях, в том числе их персональных данных, от несанкционированного доступа и разглашения.

1.3. Отношения, связанные со сбором, хранением, распространением и защитой информации о пользователях Сайта, регулируются настоящей Политикой и действующим законодательством Российской Федерации.

1.4. Действующая редакция Политики, являющейся публичным документом, разработана администрацией Сайта и доступна любому пользователю сети Интернет. Администрация Сайта вправе вносить изменения в настоящую Политику. При внесении изменений администрация Сайта уведомляет об этом пользователей путем размещения новой редакции Политики на Сайте по постоянному адресу: ${formData.website || 'website.com'}/privacy-policy

1.5. Используя Сайт, Пользователь выражает свое согласие с условиями настоящей Политики.

1.6. В случае несогласия Пользователя с условиями настоящей Политики использование Сайта должно быть немедленно прекращено.

2. УСЛОВИЯ ПОЛЬЗОВАНИЯ САЙТОМ

2.1. Оказывая услуги по использованию Сайта, Администрация Сайта, действуя разумно и добросовестно, считает, что Пользователь:
- обладает всеми необходимыми правами, позволяющими ему осуществлять регистрацию и использовать настоящий Сайт;
- указывает достоверную информацию о себе в объемах, необходимых для пользования Сайтом;
- ознакомлен с настоящей Политикой, выражает свое согласие с ней и принимает на себя указанные в ней права и обязанности.

2.2. Администрация Сайта не проверяет достоверность получаемой (собираемой) информации о пользователях, за исключением случаев, когда такая проверка необходима в целях исполнения обязательств перед пользователем.

3. ЦЕЛИ ОБРАБОТКИ ИНФОРМАЦИИ

3.1. Администрация Сайта осуществляет обработку информации о Пользователях, в том числе их персональных данных, в целях выполнения обязательств перед Пользователями в отношении использования Сайта и его сервисов.

4. СОСТАВ ИНФОРМАЦИИ О ПОЛЬЗОВАТЕЛЯХ

4.1. Персональные данные Пользователей
Персональные данные Пользователей включают в себя:
4.1.1. предоставляемые Пользователями и минимально необходимые для регистрации на Сайте: имя, фамилия, номер мобильного телефона и/или адрес электронной почты;

4.2. Иная информация о Пользователях, обрабатываемая Администрацией Сайта
Администрация Сайта обрабатывает также иную информацию о Пользователях, которая включает в себя:
4.2.1. стандартные данные, автоматически получаемые http-сервером при доступе к Сайту и последующих действиях Пользователя (IP-адрес хоста, вид операционной системы пользователя, страницы Сайта, посещаемые пользователем);
4.2.2. информация, автоматически получаемая при доступе к Сайту с использованием закладок (cookies);
4.2.3. информация, создаваемая пользователями на Сайте: комментарии, отзывы, оценки;
4.2.4. информация, полученная в результате действий других пользователей на Сайте.

5. ОБРАБОТКА ИНФОРМАЦИИ О ПОЛЬЗОВАТЕЛЯХ

5.1. Обработка персональных данных осуществляется на основе принципов:
а) законности целей и способов обработки персональных данных;
б) добросовестности;
в) соответствия целей обработки персональных данных целям, заранее определенным и заявленным при сборе персональных данных, а также полномочиям Администрации Сайта;
г) соответствия объема и характера обрабатываемых персональных данных, способов обработки персональных данных целям обработки персональных данных;
д) недопустимости объединения созданных для несовместимых между собой целей баз данных, содержащих персональные данные.

5.2. Условия и цели обработки персональных данных
Администрация Сайта осуществляет обработку персональных данных пользователя в целях исполнения договора между Администрацией Сайта и Пользователем на оказание услуг. В силу статьи 6 Федерального закона от 27.07.2006 № 152-ФЗ «О персональных данных» отдельное согласие пользователя на обработку его персональных данных не требуется. В силу пп. 2 п. 2 статьи 22 указанного закона Администрация Сайта вправе осуществлять обработку персональных данных без уведомления уполномоченного органа по защите прав субъектов персональных данных.

5.3. Сбор персональных данных
Сбор персональных данных Пользователя осуществляется на Сайте при регистрации, а также в дальнейшем при внесении пользователем по своей инициативе дополнительных сведений о себе.

5.4. Хранение и использование персональных данных
Персональные данные Пользователей хранятся исключительно на электронных носителях и обрабатываются с использованием автоматизированных систем, за исключением случаев, когда неавтоматизированная обработка персональных данных необходима в связи с исполнением требований законодательства.

5.5. Передача персональных данных
5.5.1. Персональные данные Пользователей не передаются каким-либо третьим лицам, за исключением случаев, прямо предусмотренных настоящей Политикой.
5.5.2. Предоставление персональных данных Пользователей по запросу государственных органов (органов местного самоуправления) осуществляется в порядке, предусмотренном законодательством.

6. ПРАВА И ОБЯЗАННОСТИ ПОЛЬЗОВАТЕЛЕЙ

6.1. Пользователи вправе:
6.1.1. на основании запроса получать от Администрации Сайта информацию, касающуюся обработки его персональных данных.

7. МЕРЫ ПО ЗАЩИТЕ ИНФОРМАЦИИ О ПОЛЬЗОВАТЕЛЯХ

7.1. Администрация Сайта принимает технические и организационно-правовые меры в целях обеспечения защиты персональных данных Пользователя от неправомерного или случайного доступа к ним, уничтожения, изменения, блокирования, копирования, распространения, а также от иных неправомерных действий.

8. ОБРАЩЕНИЯ ПОЛЬЗОВАТЕЛЕЙ

8.1. Пользователи вправе направлять Администрации Сайта свои запросы, в том числе запросы относительно использования их персональных данных, предусмотренные п. 6.1.1 настоящей Политики, в письменной форме по адресу: ${formData.address || 'адрес компании'}

8.2. Администрация Сайта обязуется рассмотреть и направить ответ на поступивший запрос Пользователя в течение 30 дней с момента поступления обращения.

8.3. Вся корреспонденция, полученная Администрацией Сайта от пользователей (обращения в письменной или электронной форме), относится к информации ограниченного доступа и не разглашается без письменного согласия Пользователя. Персональные данные и иная информация о Пользователе, направившем запрос, не могут быть без специального согласия Пользователя использованы иначе, как для ответа по теме полученного запроса или в случаях, прямо предусмотренных законодательством.`;

    case 'terms-of-service':
      return `ПОЛЬЗОВАТЕЛЬСКОЕ СОГЛАШЕНИЕ
${formData.companyName || 'Компания'}

1. ОБЩИЕ ПОЛОЖЕНИЯ

1.1. Настоящее Пользовательское соглашение (далее — Соглашение) относится к сайту ${formData.website || 'website.com'}, расположенному по адресу ${formData.website || 'website.com'}.

1.2. Сайт ${formData.website || 'website.com'} (далее — Сайт) является собственностью ${formData.companyName || 'Компании'} (далее — Администрация сайта).

1.3. Настоящее Соглашение регулирует отношения между Администрацией сайта и Пользователем данного Сайта.

1.4. Администрация сайта оставляет за собой право в любое время изменять, добавлять или удалять пункты настоящего Соглашения без уведомления Пользователя.

1.5. Использование Сайта Пользователем означает принятие Соглашения и изменений, внесенных в настоящее Соглашение.

1.6. Пользователь несет персональную ответственность за проверку настоящего Соглашения на наличие изменений в нем.

2. ОПРЕДЕЛЕНИЯ ТЕРМИНОВ

2.1. Перечисленные ниже термины имеют для целей настоящего Соглашения следующее значение:

2.1.1 ${formData.website || 'website.com'} – Интернет-ресурс, расположенный на доменном имени ${formData.website || 'website.com'}, осуществляющий свою деятельность посредством Интернет-ресурса и сопутствующих ему сервисов.

2.1.2. ${formData.website || 'website.com'} – сайт, содержащий информацию о Товарах и/или Услугах и/или Иных ценностях для пользователя, Продавце и/или Исполнителе услуг, позволяющий осуществить выбор, заказ и (или) приобретение Товара, и/или получение услуги.

2.1.3. Администрация сайта – уполномоченные сотрудники на управление Сайтом, действующие от имени ${formData.companyName || 'Компании'}.

2.1.4. Пользователь сайта (далее ‑ Пользователь) – лицо, имеющее доступ к Сайту, посредством сети Интернет и использующее Сайт.

2.1.5. Содержание сайта (далее – Содержание) - охраняемые результаты интеллектуальной деятельности, включая тексты литературных произведений, их названия, предисловия, аннотации, статьи, иллюстрации, обложки, музыкальные произведения с текстом или без текста, графические, текстовые, фотографические, производные, составные и иные произведения, пользовательские интерфейсы, визуальные интерфейсы, названия товарных знаков, логотипы, программы для ЭВМ, базы данных, а также дизайн, структура, выбор, координация, внешний вид, общий стиль и расположение данного Содержания, входящего в состав Сайта и другие объекты интеллектуальной собственности все вместе и/или по отдельности, содержащиеся на сайте ${formData.website || 'website.com'}.

3. ПРЕДМЕТ СОГЛАШЕНИЯ

3.1. Предметом настоящего Соглашения является предоставление Пользователю доступа к содержащимся на Сайте Товарам и/или оказываемым услугам.

3.1.1. Сайт предоставляет Пользователю следующие виды услуг (сервисов):
- доступ к электронному контенту на платной и/или бесплатной основе, с правом приобретения (скачивания), просмотра контента;
- доступ к средствам поиска и навигации Сайта;
- предоставление Пользователю возможности размещения сообщений, комментариев, рецензий Пользователей, выставления оценок контенту Сайта;
- доступ к информации об Услугах и возможность заказать их;
- иные виды услуг (сервисов), реализуемые на страницах Сайта.

3.1.2. Под действие настоящего Соглашения подпадают все существующие (реально функционирующие) на данный момент услуги (сервисы) Сайта, а также любые их последующие модификации и появляющиеся в дальнейшем дополнительные услуги (сервисы).

3.2. Доступ к сайту предоставляется на бесплатной основе.

3.3. Настоящее Соглашение является публичной офертой. Получая доступ к Сайту Пользователь считается присоединившимся к настоящему Соглашению.

3.4. Использование материалов и сервисов Сайта регулируется нормами действующего законодательства Российской Федерации

4. ПРАВА И ОБЯЗАННОСТИ СТОРОН

4.1. Администрация сайта вправе:

4.1.1. Изменять правила пользования Сайтом, а также изменять содержание данного Сайта. Изменения вступают в силу с момента публикации новой редакции Соглашения на Сайте.

4.1.2. Ограничить доступ к Сайту в случае нарушения Пользователем условий настоящего Соглашения.

4.1.3. Изменять размер оплаты, взимаемой за предоставление доступа к использованию сайта Сайта. Изменение стоимости не будет распространяться на Пользователей, имеющих регистрацию к моменту изменения размера оплаты, за исключением случаев, особо оговоренных Администрацией сайта.

4.2. Пользователь вправе:

4.2.1. Получить доступ к использованию Сайта после соблюдения требований о регистрации и оплате.

4.2.2. Пользоваться всеми имеющимися на Сайте услугами, а также приобретать любые Товары и/или Услуги, предлагаемые на Сайте.

4.2.3. Задавать любые вопросы, относящиеся к услугам сайта.

4.2.4. Пользоваться Сайтом исключительно в целях и порядке, предусмотренных Соглашением и не запрещенных законодательством Российской Федерации.

4.3. Пользователь Сайта обязуется:

4.3.1. Предоставлять по запросу Администрации сайта дополнительную информацию, которая имеет непосредственное отношение к предоставляемым услугам данного Сайта.

4.3.2. Соблюдать имущественные и неимущественные права авторов и иных правообладателей при использовании Сайта.

4.3.3. Не предпринимать действий, которые могут рассматриваться как нарушающие нормальную работу Сайта.

4.3.4. Не распространять с использованием Сайта любую конфиденциальную и охраняемую законодательством Российской Федерации информацию о физических либо юридических лицах.

4.3.5. Избегать любых действий, в результате которых может быть нарушена конфиденциальность охраняемой законодательством Российской Федерации информации.

4.3.6. Не использовать Сайт для распространения информации рекламного характера, иначе как с согласия Администрации сайта.

4.3.7. Не использовать сервисы сайта Сайта с целью:
4.3.7.1. загрузки контента, который является незаконным, нарушает любые права третьих лиц; пропагандирует насилие, жестокость, ненависть и (или) дискриминацию по расовому, национальному, половому, религиозному, социальному признакам; содержит недостоверные сведения и (или) оскорбления в адрес конкретных лиц, организаций, органов власти.
4.3.7.2. побуждения к совершению противоправных действий, а также содействия лицам, действия которых направлены на нарушение ограничений и запретов, действующих на территории Российской Федерации.
4.3.7.3. нарушения прав несовершеннолетних лиц и (или) причинение им вреда в любой форме.
4.3.7.4. ущемления прав меньшинств.
4.3.7.5. представления себя за другого человека или представителя организации и (или) сообщества без достаточных на то прав, в том числе за сотрудников данного сайта.
4.3.7.6. введения в заблуждение относительно свойств и характеристик какого-либо Товара из каталога Интернет-магазина, размещенного на Сайте.
4.3.7.7. некорректного сравнения Товара и/или Услуги, а также формирования негативного отношения к лицам, (не) пользующимся определенными Товарами и/или услугами, или осуждения таких лиц.

4.4. Пользователю запрещается:

4.4.1. Использовать любые устройства, программы, процедуры, алгоритмы и методы, автоматические устройства или эквивалентные ручные процессы для доступа, приобретения, копирования или отслеживания содержания Сайта данного Интернет-магазина;

4.4.2. Нарушать надлежащее функционирование Сайта;

4.4.3. Любым способом обходить навигационную структуру Сайта для получения или попытки получения любой информации, документов или материалов любыми средствами, которые специально не представлены сервисами данного Сайта;

4.4.4. Несанкционированный доступ к функциям Сайта, любым другим системам или сетям, относящимся к данному Сайту, а также к любым услугам, предлагаемым на Сайте;

4.4.5. Нарушать систему безопасности или аутентификации на Сайте или в любой сети, относящейся к Сайту.

4.4.6. Выполнять обратный поиск, отслеживать или пытаться отслеживать любую информацию о любом другом Пользователе Сайта.

4.4.7. Использовать Сайт и его Содержание в любых целях, запрещенных законодательством Российской Федерации, а также подстрекать к любой незаконной деятельности или другой деятельности, нарушающей права интернет-магазина или других лиц.

5. ИСПОЛЬЗОВАНИЕ САЙТА

5.1. Сайт и Содержание, входящее в состав Сайта, принадлежит и управляется Администрацией сайта.

5.2. Содержание Сайта не может быть скопировано, опубликовано, воспроизведено, передано или распространено любым способом, а также размещено в глобальной сети «Интернет» без предварительного письменного согласия Администрации сайта.

5.3. Содержание Сайта защищено авторским правом, законодательством о товарных знаках, а также другими правами, связанными с интеллектуальной собственностью, и законодательством о недобросовестной конкуренции.

5.4. Приобретение Товара, предлагаемого на Сайте, может потребовать создания учётной записи Пользователя.

5.5. Пользователь несет персональную ответственность за сохранение конфиденциальности информации учётной записи, включая пароль, а также за всю без исключения деятельность, которая ведётся от имени Пользователя учётной записи.

5.6. Пользователь должен незамедлительно уведомить Администрацию сайта о несанкционированном использовании его учётной записи или пароля или любом другом нарушении системы безопасности.

5.7. Администрация сайта обладает правом в одностороннем порядке аннулировать учетную запись Пользователя, если она не использовалась более количество месяцев календарных месяцев подряд без уведомления Пользователя.

5.7. Настоящее Соглашение распространяет свое действия на все дополнительные положения и условия о покупке Товара и/или оказанию услуг, предоставляемых на Сайте.

5.8. Информация, размещаемая на Сайте не должна истолковываться как изменение настоящего Соглашения.

5.9. Администрация сайта имеет право в любое время без уведомления Пользователя вносить изменения в перечень Товаров и услуг, предлагаемых на Сайте, и (или) в цены, применимые к таким Товарам по их реализации и (или) оказываемым услугам.

5.10. Документы, указанные в пунктах 5.10.1 - 5.10.4 настоящего Соглашения регулируют в соответствующей части и распространяют свое действие на использование Пользователем Сайта. В настоящее Соглашение включены следующие документы:

5.10.1. Политика конфиденциальности;
5.10.2. Договор купли-продажи товаров дистанционным способом;
5.10.3. Заявка на оформление заказа;
5.10.4. Предложения и замечания.

5.11. Любой из документов, перечисленных в пункте 5.10. настоящего Соглашения может подлежать обновлению. Изменения вступают в силу с момента их опубликования на Сайте.

6. ОТВЕТСТВЕННОСТЬ

6.1. Любые убытки, которые Пользователь может понести в случае умышленного или неосторожного нарушения любого положения настоящего Соглашения, а также вследствие несанкционированного доступа к коммуникациям другого Пользователя, Администрацией сайта не возмещаются.

6.2. Администрация сайта не несет ответственности за:

6.2.1. Задержки или сбои в процессе совершения операции, возникшие вследствие непреодолимой силы, а также любого случая неполадок в телекоммуникационных, компьютерных, электрических и иных смежных системах.

6.2.2. Действия систем переводов, банков, платежных систем и за задержки связанные с их работой.

6.2.3. Надлежащее функционирование Сайта, в случае, если Пользователь не имеет необходимых технических средств для его использования, а также не несет никаких обязательств по обеспечению пользователей такими средствами.

7. НАРУШЕНИЕ УСЛОВИЙ ПОЛЬЗОВАТЕЛЬСКОГО СОГЛАШЕНИЯ

7.1. Администрация сайта вправе раскрыть любую собранную о Пользователе данного Сайта информацию, если раскрытие необходимо в связи с расследованием или жалобой в отношении неправомерного использования Сайта либо для установления (идентификации) Пользователя, который может нарушать или вмешиваться в права Администрации сайта или в права других Пользователей Сайта.

7.2. Администрация сайта имеет право раскрыть любую информацию о Пользователе, которую посчитает необходимой для выполнения положений действующего законодательства или судебных решений, обеспечения выполнения условий настоящего Соглашения, защиты прав или безопасности ${formData.companyName || 'Компании'}, Пользователей.

7.3. Администрация сайта имеет право раскрыть информацию о Пользователе, если действующее законодательство Российской Федерации требует или разрешает такое раскрытие.

7.4. Администрация сайта вправе без предварительного уведомления Пользователя прекратить и (или) заблокировать доступ к Сайту, если Пользователь нарушил настоящее Соглашение или содержащиеся в иных документах условия пользования Сайтом, а также в случае прекращения действия Сайта либо по причине технической неполадки или проблемы.

7.5. Администрация сайта не несет ответственности перед Пользователем или третьими лицами за прекращение доступа к Сайту в случае нарушения Пользователем любого положения настоящего Соглашения или иного документа, содержащего условия пользования Сайтом.

8. РАЗРЕШЕНИЕ СПОРОВ

8.1. В случае возникновения любых разногласий или споров между Сторонами настоящего Соглашения обязательным условием до обращения в суд является предъявление претензии (письменного предложения о добровольном урегулировании спора).

8.2. Получатель претензии в течение 30 календарных дней со дня ее получения, письменно уведомляет заявителя претензии о результатах рассмотрения претензии.

8.3. При невозможности разрешить спор в добровольном порядке любая из Сторон вправе обратиться в суд за защитой своих прав, которые предоставлены им действующим законодательством Российской Федерации.

8.4. Любой иск в отношении условий использования Сайта должен быть предъявлен в течение срок после возникновения оснований для иска, за исключением защиты авторских прав на охраняемые в соответствии с законодательством материалы Сайта. При нарушении условий данного пункта любой иск или основания для иска погашаются исковой давностью.

9. ДОПОЛНИТЕЛЬНЫЕ УСЛОВИЯ

9.1. Администрация сайта не принимает встречные предложения от Пользователя относительно изменений настоящего Пользовательского соглашения.

9.2. Отзывы Пользователя, размещенные на Сайте, не являются конфиденциальной информацией и могут быть использованы Администрацией сайта без ограничений.

Обновлено «${new Date().toLocaleDateString()}»
${formData.companyName || 'Компания'}
${formData.address || 'адрес компании'}`;

    case 'job-offer':
      return `ПРЕДЛОЖЕНИЕ О РАБОТЕ
${formData.companyName || 'Компания'}

Уважаемый ${formData.candidateName || '[Имя кандидата]'},

Мы рады предложить Вам должность ${formData.position || '[Должность]'} в компании ${formData.companyName || '[Название компании]'}, начиная с ${formData.startDate || '[Дата начала работы]'}.

1. ДОЛЖНОСТЬ И ОБЯЗАННОСТИ

Ваша должность: ${formData.position || '[Должность]'}
Отдел: ${formData.department || '[Отдел]'}
Непосредственный руководитель: ${formData.manager || '[ФИО руководителя]'}

Основные обязанности:
${formData.responsibilities || '- [Перечень основных обязанностей]'}

2. УСЛОВИЯ РАБОТЫ

Тип занятости: ${formData.employmentType || '[Полная/Частичная]'}
График работы: ${formData.workSchedule || '[График работы]'}
Место работы: ${formData.workLocation || '[Адрес офиса]'}

3. ВОЗНАГРАЖДЕНИЕ И ЛЬГОТЫ

Заработная плата: ${formData.salary || '[Сумма]'} рублей в месяц до вычета налогов
Премии: ${formData.bonuses || '[Условия премирования]'}

Дополнительные льготы:
${formData.benefits || '- [Перечень льгот и компенсаций]'}

4. ИСПЫТАТЕЛЬНЫЙ СРОК

Испытательный срок составляет ${formData.probationPeriod || '[количество]'} месяца с даты начала работы.
В течение испытательного срока заработная плата составит ${formData.probationSalary || '[Сумма]'} рублей в месяц до вычета налогов.

5. ДОПОЛНИТЕЛЬНЫЕ УСЛОВИЯ

${formData.additionalTerms || '[Дополнительные условия]'}

6. ПОРЯДОК ПРИНЯТИЯ ПРЕДЛОЖЕНИЯ

Для принятия данного предложения, пожалуйста, подпишите и верните один экземпляр этого письма в срок до ${formData.offerDeadline || '[Дата]'}.

Мы с нетерпением ждем Вашего ответа и надеемся на плодотворное сотрудничество!

С уважением,
${formData.hrName || '[ФИО HR-менеджера]'}
HR-менеджер
${formData.companyName || '[Название компании]'}
Телефон: ${formData.hrPhone || '[Телефон]'}
Email: ${formData.hrEmail || '[Email]'}

--------------------------------
ПОДТВЕРЖДЕНИЕ ПРИНЯТИЯ ПРЕДЛОЖЕНИЯ

Я, ${formData.candidateName || '___________________'}, принимаю предложение о работе на указанных выше условиях.

Дата: ___________________ Подпись: ___________________`;

    case 'invoice':
      return `СЧЕТ НА ОПЛАТУ
№ ${formData.invoiceNumber || 'INVOICE-001'} от ${formData.invoiceDate || new Date().toLocaleDateString()}

ПОСТАВЩИК:
${formData.companyName || '[Название компании]'}
ИНН/КПП: ${formData.inn || '[ИНН]'}/${formData.kpp || '[КПП]'}
Адрес: ${formData.address || '[Юридический адрес]'}
Телефон: ${formData.phone || '[Телефон]'}
Email: ${formData.email || '[Email]'}
Банковские реквизиты:
Р/с: ${formData.accountNumber || '[Расчетный счет]'}
Банк: ${formData.bankName || '[Название банка]'}
БИК: ${formData.bik || '[БИК]'}
К/с: ${formData.correspondentAccount || '[Корреспондентский счет]'}

ПОКУПАТЕЛЬ:
${formData.clientName || '[Название клиента]'}
ИНН/КПП: ${formData.clientInn || '[ИНН клиента]'}/${formData.clientKpp || '[КПП клиента]'}
Адрес: ${formData.clientAddress || '[Юридический адрес клиента]'}
Телефон: ${formData.clientPhone || '[Телефон клиента]'}
Email: ${formData.clientEmail || '[Email клиента]'}

ТОВАРЫ/УСЛУГИ:
-----------------------------------------------------------------
№  | Наименование               | Кол-во | Ед. | Цена  | Сумма
-----------------------------------------------------------------
1  | ${formData.item1Name || '[Наименование товара/услуги]'} | ${formData.item1Quantity || '1'} | ${formData.item1Unit || 'шт.'} | ${formData.item1Price || '0'} | ${formData.item1Total || '0'}
${formData.item2Name ? `2  | ${formData.item2Name || '[Наименование товара/услуги]'} | ${formData.item2Quantity || '1'} | ${formData.item2Unit || 'шт.'} | ${formData.item2Price || '0'} | ${formData.item2Total || '0'}` : ''}
${formData.item3Name ? `3  | ${formData.item3Name || '[Наименование товара/услуги]'} | ${formData.item3Quantity || '1'} | ${formData.item3Unit || 'шт.'} | ${formData.item3Price || '0'} | ${formData.item3Total || '0'}` : ''}
-----------------------------------------------------------------

Итого: ${formData.subtotal || '0'} руб.
НДС (${formData.vatRate || '20'}%): ${formData.vatAmount || '0'} руб.
Всего к оплате: ${formData.total || '0'} руб.

Всего наименований: ${formData.totalItems || '1'}, на сумму ${formData.total || '0'} руб.
Сумма прописью: ${formData.totalInWords || '[Сумма прописью]'}

Срок оплаты: ${formData.paymentDue || '[Срок оплаты]'}

Руководитель _________________ / ${formData.directorName || '[ФИО руководителя]'} /

Главный бухгалтер _________________ / ${formData.accountantName || '[ФИО главного бухгалтера]'} /

М.П.

Примечание: ${formData.notes || '[Дополнительная информация]'}`;

    case 'legal-contract':
      return `ДОГОВОР
№ ${formData.contractNumber || '[Номер договора]'}

г. ${formData.city || '[Город]']}                                               "${formData.contractDate || new Date().toLocaleDateString()}"

${formData.companyName || '[Полное наименование организации]'}, именуемое в дальнейшем "Сторона 1", в лице ${formData.representativeName || '[ФИО представителя]'}, действующего на основании ${formData.representativeBasis || '[Устава/Доверенности №...]'}, с одной стороны, и
${formData.clientName || '[Полное наименование контрагента]'}, именуемое в дальнейшем "Сторона 2", в лице ${formData.clientRepresentativeName || '[ФИО представителя контрагента]'}, действующего на основании ${formData.clientRepresentativeBasis || '[Устава/Доверенности №...]'}, с другой стороны,
вместе именуемые "Стороны", а индивидуально – "Сторона", заключили настоящий договор (далее – "Договор") о нижеследующем:

1. ПРЕДМЕТ ДОГОВОРА

1.1. Предметом настоящего Договора является ${formData.contractSubject || '[Предмет договора]'}.
1.2. Сторона 1 обязуется ${formData.party1Obligations || '[Обязательства Стороны 1]'}, а Сторона 2 обязуется ${formData.party2Obligations || '[Обязательства Стороны 2]'}.
1.3. Сроки выполнения обязательств: ${formData.timeline || '[Сроки выполнения работ/оказания услуг/поставки товара]'}.

2. ЦЕНА ДОГОВОРА И ПОРЯДОК РАСЧЕТОВ

2.1. Общая стоимость по настоящему Договору составляет ${formData.contractAmount || '[Сумма цифрами]'} (${formData.contractAmountInWords || '[Сумма прописью]'}) рублей, ${formData.vat ? 'в том числе НДС' : 'НДС не облагается'}.
2.2. Порядок оплаты: ${formData.paymentTerms || '[Порядок и сроки оплаты]'}.
2.3. Обязательство по оплате считается исполненным с момента ${formData.paymentCompletion || '[списания денежных средств с расчетного счета Стороны 2/зачисления денежных средств на расчетный счет Стороны 1]'}.

3. ПРАВА И ОБЯЗАННОСТИ СТОРОН

3.1. Сторона 1 обязуется:
3.1.1. ${formData.party1Duty1 || '[Обязанность 1]'};
3.1.2. ${formData.party1Duty2 || '[Обязанность 2]'};
3.1.3. Выполнять иные обязанности, предусмотренные Договором.

3.2. Сторона 1 имеет право:
3.2.1. ${formData.party1Right1 || '[Право 1]'};
3.2.2. ${formData.party1Right2 || '[Право 2]'};
3.2.3. Осуществлять иные права, предусмотренные Договором.

3.3. Сторона 2 обязуется:
3.3.1. ${formData.party2Duty1 || '[Обязанность 1]'};
3.3.2. ${formData.party2Duty2 || '[Обязанность 2]'};
3.3.3. Выполнять иные обязанности, предусмотренные Договором.

3.4. Сторона 2 имеет право:
3.4.1. ${formData.party2Right1 || '[Право 1]'};
3.4.2. ${formData.party2Right2 || '[Право 2]'};
3.4.3. Осуществлять иные права, предусмотренные Договором.

4. ОТВЕТСТВЕННОСТЬ СТОРОН

4.1. За неисполнение или ненадлежащее исполнение обязательств по настоящему Договору Стороны несут ответственность в соответствии с действующим законодательством Российской Федерации и условиями настоящего Договора.
4.2. В случае нарушения Стороной 1 сроков выполнения обязательств, Сторона 2 вправе потребовать уплаты неустойки в размере ${formData.party1Penalty || '0,1% от стоимости невыполненных обязательств за каждый день просрочки'}.
4.3. В случае нарушения Стороной 2 сроков оплаты, Сторона 1 вправе потребовать уплаты неустойки в размере ${formData.party2Penalty || '0,1% от неоплаченной суммы за каждый день просрочки'}.
4.4. Уплата неустойки не освобождает Стороны от исполнения обязательств по настоящему Договору.

5. СРОК ДЕЙСТВИЯ, ИЗМЕНЕНИЕ И РАСТОРЖЕНИЕ ДОГОВОРА

5.1. Настоящий Договор вступает в силу с момента его подписания обеими Сторонами и действует до ${formData.contractEndDate || '[Дата окончания действия договора]'}.
5.2. Все изменения и дополнения к настоящему Договору должны быть совершены в письменной форме и подписаны уполномоченными представителями Сторон.
5.3. Договор может быть расторгнут досрочно по соглашению Сторон либо по иным основаниям, предусмотренным действующим законодательством Российской Федерации.

6. ПОРЯДОК РАЗРЕШЕНИЯ СПОРОВ

6.1. Все споры и разногласия, возникающие между Сторонами по настоящему Договору или в связи с ним, разрешаются путем переговоров.
6.2. В случае невозможности разрешения споров путем переговоров, они передаются на рассмотрение в ${formData.disputeCourt || '[Наименование суда]'} в порядке, установленном действующим законодательством Российской Федерации.

7. ЗАКЛЮЧИТЕЛЬНЫЕ ПОЛОЖЕНИЯ

7.1. Во всем остальном, что не предусмотрено настоящим Договором, Стороны руководствуются действующим законодательством Российской Федерации.
7.2. Договор составлен в двух экземплярах, имеющих одинаковую юридическую силу, по одному для каждой из Сторон.
7.3. Все уведомления и сообщения должны направляться в письменной форме.

8. РЕКВИЗИТЫ И ПОДПИСИ СТОРОН

Сторона 1:
${formData.companyName || '[Полное наименование организации]'}
Юридический адрес: ${formData.legalAddress || '[Юридический адрес]'}
Фактический адрес: ${formData.actualAddress || '[Фактический адрес]'}
ИНН/КПП: ${formData.inn || '[ИНН]'}/${formData.kpp || '[КПП]'}
ОГРН: ${formData.ogrn || '[ОГРН]'}
Р/с: ${formData.accountNumber || '[Расчетный счет]'}
Банк: ${formData.bankName || '[Название банка]'}
БИК: ${formData.bik || '[БИК]'}
К/с: ${formData.correspondentAccount || '[Корреспондентский счет]'}
Телефон: ${formData.phone || '[Телефон]'}
Email: ${formData.email || '[Email]'}

____________________ / ${formData.representativeName || '[ФИО представителя]'} /
М.П.

Сторона 2:
${formData.clientName || '[Полное наименование контрагента]'}
Юридический адрес: ${formData.clientLegalAddress || '[Юридический адрес]'}
Фактический адрес: ${formData.clientActualAddress || '[Фактический адрес]'}
ИНН/КПП: ${formData.clientInn || '[ИНН]'}/${formData.clientKpp || '[КПП]'}
ОГРН: ${formData.clientOgrn || '[ОГРН]'}
Р/с: ${formData.clientAccountNumber || '[Расчетный счет]'}
Банк: ${formData.clientBankName || '[Название банка]'}
БИК: ${formData.clientBik || '[БИК]'}
К/с: ${formData.clientCorrespondentAccount || '[Корреспондентский счет]'}
Телефон: ${formData.clientPhone || '[Телефон]'}
Email: ${formData.clientEmail || '[Email]'}

____________________ / ${formData.clientRepresentativeName || '[ФИО представителя]'} /
М.П.`;

    case 'employment-contract':
      return `ТРУДОВОЙ ДОГОВОР № ${formData.contractNumber || '[Номер договора]'}

г. ${formData.city || '[Город]'}                                              "${formData.contractDate || new Date().toLocaleDateString()}"

${formData.companyName || '[Полное наименование организации-работодателя]'}, именуемое в дальнейшем "Работодатель", в лице ${formData.employerRepresentative || '[Должность, ФИО представителя работодателя]'}, действующего на основании ${formData.employerRepresentativeBasis || '[Устава/Доверенности №...]'}, с одной стороны,
и гражданин Российской Федерации ${formData.employeeName || '[ФИО работника полностью]'}, именуемый в дальнейшем "Работник", с другой стороны, вместе именуемые "Стороны", заключили настоящий трудовой договор (далее - "Договор") о нижеследующем:

1. ПРЕДМЕТ ДОГОВОРА

1.1. По настоящему Договору Работодатель обязуется предоставить Работнику работу по обусловленной трудовой функции, обеспечить условия труда, предусмотренные трудовым законодательством и иными нормативными правовыми актами, содержащими нормы трудового права, коллективным договором (при его наличии), соглашениями, локальными нормативными актами и данным Договором, своевременно и в полном размере выплачивать Работнику заработную плату, а Работник обязуется лично выполнять определенную этим Договором трудовую функцию в интересах, под управлением и контролем Работодателя, соблюдать правила внутреннего трудового распорядка, действующие у Работодателя.
1.2. Работник принимается на работу в ${formData.department || '[Наименование структурного подразделения]'} на должность ${formData.position || '[Наименование должности]'}.
1.3. Место работы Работника: ${formData.workLocation || '[Адрес места работы]'}.
1.4. Работа по настоящему Договору является для Работника ${formData.isMainJob ? 'основной' : 'работой по совместительству'}.
1.5. Настоящий Договор заключается на ${formData.contractTerm || '[неопределенный срок/определенный срок (указать срок и причину заключения срочного трудового договора)]'}.
1.6. Дата начала работы: ${formData.startDate || '[Дата начала работы]'}.
1.7. Работнику устанавливается испытательный срок продолжительностью ${formData.probationPeriod || '[срок]'} с целью проверки соответствия Работника поручаемой работе.

2. ПРАВА И ОБЯЗАННОСТИ РАБОТНИКА

2.1. Работник имеет право на:
2.1.1. Предоставление ему работы, обусловленной настоящим Договором;
2.1.2. Рабочее место, соответствующее государственным нормативным требованиям охраны труда и условиям, предусмотренным коллективным договором (при его наличии);
2.1.3. Своевременную и в полном объеме выплату заработной платы в соответствии со своей квалификацией, сложностью труда, количеством и качеством выполненной работы;
2.1.4. Отдых, обеспечиваемый установлением нормальной продолжительности рабочего времени, сокращенного рабочего времени для отдельных профессий и категорий работников, предоставлением еженедельных выходных дней, нерабочих праздничных дней, оплачиваемых ежегодных отпусков;
2.1.5. Иные права, предусмотренные трудовым законодательством Российской Федерации, настоящим Договором.

2.2. Работник обязан:
2.2.1. Добросовестно исполнять свои трудовые обязанности, возложенные на него настоящим Договором и должностной инструкцией;
2.2.2. Соблюдать правила внутреннего трудового распорядка;
2.2.3. Соблюдать трудовую дисциплину;
2.2.4. Выполнять установленные нормы труда;
2.2.5. Соблюдать требования по охране труда и обеспечению безопасности труда;
2.2.6. Бережно относиться к имуществу Работодателя (в том числе к имуществу третьих лиц, находящемуся у Работодателя, если Работодатель несет ответственность за сохранность этого имущества) и других работников;
2.2.7. Незамедлительно сообщить Работодателю либо непосредственному руководителю о возникновении ситуации, представляющей угрозу жизни и здоровью людей, сохранности имущества Работодателя (в том числе имущества третьих лиц, находящегося у Работодателя, если Работодатель несет ответственность за сохранность этого имущества);
2.2.8. Не разглашать охраняемую законом тайну (государственную, коммерческую, служебную и иную), ставшую известной Работнику в связи с исполнением им трудовых обязанностей;
2.2.9. Исполнять иные обязанности, предусмотренные трудовым законодательством Российской Федерации, настоящим Договором.

3. ПРАВА И ОБЯЗАННОСТИ РАБОТОДАТЕЛЯ

3.1. Работодатель имеет право:
3.1.1. Требовать от Работника добросовестного исполнения обязанностей по настоящему Договору;
3.1.2. Принимать локальные нормативные акты, в том числе правила внутреннего трудового распорядка, требования по охране труда и обеспечению безопасности труда;
3.1.3. Привлекать Работника к дисциплинарной и материальной ответственности в порядке, установленном Трудовым кодексом Российской Федерации, иными федеральными законами;
3.1.4. Поощрять Работника за добросовестный эффективный труд;
3.1.5. Иные права, предусмотренные трудовым законодательством Российской Федерации, настоящим Договором.

3.2. Работодатель обязан:
3.2.1. Предоставить Работнику работу, обусловленную настоящим Договором;
3.2.2. Обеспечить безопасность и условия труда, соответствующие государственным нормативным требованиям охраны труда;
3.2.3. Обеспечивать Работника оборудованием, инструментами, технической документацией и иными средствами, необходимыми для исполнения им трудовых обязанностей;
3.2.4. Выплачивать в полном размере причитающуюся Работнику заработную плату в сроки, установленные правилами внутреннего трудового распорядка;
3.2.5. Осуществлять обработку и обеспечивать защиту персональных данных Работника в соответствии с законодательством Российской Федерации;
3.2.6. Знакомить Работника под роспись с принимаемыми локальными нормативными актами, непосредственно связанными с его трудовой деятельностью;
3.2.7. Исполнять иные обязанности, предусмотренные трудовым законодательством Российской Федерации, настоящим Договором.

4. РАБОЧЕЕ ВРЕМЯ И ВРЕМЯ ОТДЫХА

4.1. Работнику устанавливается следующий режим рабочего времени: ${formData.workSchedule || '[пятидневная рабочая неделя с двумя выходными днями (суббота, воскресенье)/иной режим]'}.
4.2. Продолжительность рабочего времени составляет ${formData.workHours || '40 часов в неделю'}.
4.3. Время начала работы: ${formData.workStartTime || '[Время]'}.
       Время окончания работы: ${formData.workEndTime || '[Время]'}.
       Перерыв для отдыха и питания: ${formData.breakTime || '[Время начала и окончания перерыва]'}.
4.4. Работнику предоставляется ежегодный основной оплачиваемый отпуск продолжительностью ${formData.vacationDays || '28'} календарных дней.
4.5. Право на использование отпуска за первый год работы возникает у Работника по истечении шести месяцев его непрерывной работы у данного Работодателя. По соглашению сторон оплачиваемый отпуск Работнику может быть предоставлен и до истечения шести месяцев.
4.6. Отпуск за второй и последующие годы работы может предоставляться в любое время рабочего года в соответствии с очередностью предоставления ежегодных оплачиваемых отпусков, установленной у Работодателя.

5. ОПЛАТА ТРУДА

5.1. За выполнение трудовых обязанностей, предусмотренных настоящим Договором, Работнику устанавливается заработная плата в размере:
5.1.1. Должностной оклад в размере ${formData.salary || '[Сумма]'} рублей в месяц.
5.1.2. Работнику выплачиваются ${formData.bonuses || '[премии, надбавки, доплаты и иные выплаты (указать виды и размеры)]'}.
5.2. Заработная плата выплачивается Работнику не реже чем каждые полмесяца (${formData.salaryDates || '[конкретные даты выплаты заработной платы]'}) путем ${formData.salaryPaymentMethod || '[перечисления на указанный Работником счет в банке/выдачи через кассу Работодателя]'}.
5.3. Из заработной платы Работника могут производиться удержания в случаях, предусмотренных законодательством Российской Федерации.

6. СОЦИАЛЬНОЕ СТРАХОВАНИЕ И МЕРЫ СОЦИАЛЬНОЙ ПОДДЕРЖКИ

6.1. Работник подлежит обязательному социальному страхованию в связи с трудовой деятельностью в порядке, установленном законодательством Российской Федерации.
6.2. Работнику предоставляются следующие меры социальной поддержки: ${formData.socialBenefits || '[перечислить меры социальной поддержки, если они предусмотрены]'}.

7. ОТВЕТСТВЕННОСТЬ СТОРОН

7.1. Работодатель и Работник несут ответственность за неисполнение или ненадлежащее исполнение взятых на себя обязанностей и обязательств, установленных законодательством Российской Федерации, локальными нормативными актами и настоящим Договором.
7.2. За совершение дисциплинарного проступка, то есть неисполнение или ненадлежащее исполнение Работником по его вине возложенных на него трудовых обязанностей, к Работнику могут быть применены дисциплинарные взыскания, предусмотренные Трудовым кодексом Российской Федерации.
7.3. Работник и Работодатель могут быть привлечены к материальной и иным видам юридической ответственности в случаях и в порядке, предусмотренных трудовым законодательством и иными федеральными законами.

8. ИЗМЕНЕНИЕ И ПРЕКРАЩЕНИЕ ДОГОВОРА

8.1. Изменения могут быть внесены в настоящий Договор: по соглашению сторон, при изменении законодательства Российской Федерации в части, затрагивающей права, обязанности и интересы сторон, по инициативе сторон, а также в других случаях, предусмотренных Трудовым кодексом Российской Федерации.
8.2. При изменении Работодателем условий настоящего Договора (за исключением трудовой функции) по причинам, связанным с изменением организационных или технологических условий труда, Работодатель обязан уведомить об этом Работника в письменной форме не позднее чем за два месяца.
8.3. Настоящий Договор может быть прекращен по основаниям, предусмотренным Трудовым кодексом Российской Федерации и иными федеральными законами.

9. ЗАКЛЮЧИТЕЛЬНЫЕ ПОЛОЖЕНИЯ

9.1. Трудовые споры и разногласия сторон по вопросам соблюдения условий настоящего Договора разрешаются по соглашению сторон, а в случае недостижения соглашения рассматриваются комиссией по трудовым спорам и (или) судом в порядке, установленном законодательством Российской Федерации.
9.2. В части, не предусмотренной настоящим Договором, стороны руководствуются законодательством Российской Федерации.
9.3. Настоящий Договор заключен в двух экземплярах, имеющих одинаковую юридическую силу, по одному для каждой из сторон.

10. АДРЕСА И РЕКВИЗИТЫ СТОРОН

Работодатель:
${formData.companyName || '[Полное наименование]'}
Юридический адрес: ${formData.legalAddress || '[Юридический адрес]'}
ИНН/КПП: ${formData.inn || '[ИНН]'}/${formData.kpp || '[КПП]'}
ОГРН: ${formData.ogrn || '[ОГРН]'}
Телефон: ${formData.phone || '[Телефон]'}
Email: ${formData.email || '[Email]'}

Работник:
${formData.employeeName || '[ФИО полностью]'}
Паспорт: серия ${formData.passportSeries || '[Серия]'} № ${formData.passportNumber || '[Номер]'}
Выдан: ${formData.passportIssued || '[Кем и когда выдан]'}
Адрес регистрации: ${formData.employeeAddress || '[Адрес регистрации]'}
Телефон: ${formData.employeePhone || '[Телефон]'}
Email: ${formData.employeeEmail || '[Email]'}

ПОДПИСИ СТОРОН:

Работодатель: _________________ / ${formData.employerRepresentativeName || '[ФИО представителя работодателя]'} /
                                    М.П.

Работник: _________________ / ${formData.employeeName || '[ФИО работника]'} /

Экземпляр трудового договора получил: _________________ / ${formData.employeeName || '[ФИО работника]'} /
"${formData.contractDate || new Date().toLocaleDateString()}"`;

    case 'nda':
      return `СОГЛАШЕНИЕ О НЕРАЗГЛАШЕНИИ КОНФИДЕНЦИАЛЬНОЙ ИНФОРМАЦИИ
(NDA)

г. ${formData.city || '[Город]'}                                            "${formData.agreementDate || new Date().toLocaleDateString()}"

${formData.companyName || '[Полное наименование организации]'}, в лице ${formData.representativeName || '[Должность, ФИО представителя]'}, действующего на основании ${formData.representativeBasis || '[Устава/Доверенности №...]'}, именуемое в дальнейшем "Раскрывающая сторона", с одной стороны, и
${formData.recipientName || '[Полное наименование контрагента/ФИО физического лица]'}, в лице ${formData.recipientRepresentativeName || '[Должность, ФИО представителя контрагента]'}, действующего на основании ${formData.recipientRepresentativeBasis || '[Устава/Доверенности №...]'}, именуемое в дальнейшем "Получающая сторона", с другой стороны,
вместе именуемые "Стороны", а индивидуально – "Сторона", заключили настоящее соглашение о неразглашении конфиденциальной информации (далее – "Соглашение") о нижеследующем:

1. ПРЕДМЕТ СОГЛАШЕНИЯ

1.1. В целях ${formData.purpose || '[Указать цель, для которой раскрывается конфиденциальная информация]'} Раскрывающая сторона предоставляет Получающей стороне доступ к конфиденциальной информации на условиях, определенных настоящим Соглашением.
1.2. В рамках настоящего Соглашения под конфиденциальной информацией понимаются сведения любого характера (производственные, технические, экономические, организационные и другие), в том числе о результатах интеллектуальной деятельности, а также сведения о способах осуществления профессиональной деятельности, которые имеют действительную или потенциальную коммерческую ценность в силу неизвестности их третьим лицам, к которым у третьих лиц нет свободного доступа на законном основании и в отношении которых обладателем таких сведений введен режим коммерческой тайны.

2. КОНФИДЕНЦИАЛЬНАЯ ИНФОРМАЦИЯ

2.1. К конфиденциальной информации в рамках настоящего Соглашения относится:
2.1.1. ${formData.confidentialInfo1 || '[Вид конфиденциальной информации]'};
2.1.2. ${formData.confidentialInfo2 || '[Вид конфиденциальной информации]'};
2.1.3. ${formData.confidentialInfo3 || '[Вид конфиденциальной информации]'};
2.1.4. Иная информация, обозначенная Раскрывающей стороной как "Конфиденциальная", "Коммерческая тайна", "Proprietary" или "Confidential".

2.2. Не является конфиденциальной следующая информация:
2.2.1. Информация, которая была общеизвестна до заключения настоящего Соглашения или стала общеизвестна не по вине Получающей стороны;
2.2.2. Информация, которая была на законных основаниях известна Получающей стороне до момента предоставления ее Раскрывающей стороной;
2.2.3. Информация, независимо полученная Получающей стороной без использования конфиденциальной информации Раскрывающей стороны;
2.2.4. Информация, которая должна быть раскрыта в соответствии с требованиями законодательства, решением суда или уполномоченного государственного органа.

3. ОБЯЗАТЕЛЬСТВА СТОРОН

3.1. Получающая сторона обязуется:
3.1.1. Не раскрывать конфиденциальную информацию третьим лицам без предварительного письменного согласия Раскрывающей стороны, за исключением случаев, когда такое раскрытие требуется в соответствии с законодательством, решением суда или уполномоченного государственного органа;
3.1.2. Использовать конфиденциальную информацию исключительно в целях, для которых она была предоставлена;
3.1.3. Принимать все необходимые меры для защиты конфиденциальной информации от несанкционированного доступа, распространения или использования;
3.1.4. Не копировать, не воспроизводить и не дублировать конфиденциальную информацию полностью или частично, если это не требуется для целей, для которых она была предоставлена;
3.1.5. По требованию Раскрывающей стороны или по окончании срока действия Соглашения вернуть все носители конфиденциальной информации и уничтожить все копии такой информации.

3.2. Раскрывающая сторона обязуется:
3.2.1. Предоставлять Получающей стороне только ту конфиденциальную информацию, которая необходима для достижения целей, указанных в п. 1.1 настоящего Соглашения;
3.2.2. Своевременно сообщать Получающей стороне об изменениях в статусе конфиденциальной информации.

4. ОТВЕТСТВЕННОСТЬ СТОРОН

4.1. За разглашение конфиденциальной информации Получающая сторона несет ответственность в соответствии с действующим законодательством Российской Федерации.
4.2. В случае нарушения обязательств по настоящему Соглашению Получающая сторона обязуется возместить Раскрывающей стороне все убытки, причиненные таким нарушением.
4.3. В случае разглашения конфиденциальной информации Получающая сторона обязуется уплатить Раскрывающей стороне штраф в размере ${formData.penalty || '[Сумма]'} рублей за каждый факт разглашения.
4.4. Уплата штрафа не освобождает Получающую сторону от обязанности возместить убытки, причиненные разглашением конфиденциальной информации.

5. СРОК ДЕЙСТВИЯ СОГЛАШЕНИЯ

5.1. Настоящее Соглашение вступает в силу с момента его подписания обеими Сторонами и действует в течение ${formData.term || '[Срок действия]'} лет.
5.2. Обязательства по неразглашению конфиденциальной информации, предусмотренные настоящим Соглашением, сохраняют свою силу в течение ${formData.confidentialityTerm || '[Срок]'} лет после прекращения действия настоящего Соглашения.

6. РАЗРЕШЕНИЕ СПОРОВ

6.1. Все споры и разногласия, возникающие между Сторонами по настоящему Соглашению или в связи с ним, разрешаются путем переговоров.
6.2. В случае невозможности разрешения споров путем переговоров, они передаются на рассмотрение в ${formData.disputeCourt || '[Наименование суда]'} в порядке, установленном действующим законодательством Российской Федерации.

7. ЗАКЛЮЧИТЕЛЬНЫЕ ПОЛОЖЕНИЯ

7.1. Все изменения и дополнения к настоящему Соглашению должны быть совершены в письменной форме и подписаны уполномоченными представителями Сторон.
7.2. Настоящее Соглашение составлено в двух экземплярах, имеющих одинаковую юридическую силу, по одному для каждой из Сторон.
7.3. Во всем остальном, что не предусмотрено настоящим Соглашением, Стороны руководствуются действующим законодательством Российской Федерации.

8. РЕКВИЗИТЫ И ПОДПИСИ СТОРОН

Раскрывающая сторона:
${formData.companyName || '[Полное наименование организации]'}
Юридический адрес: ${formData.legalAddress || '[Юридический адрес]'}
ИНН/КПП: ${formData.inn || '[ИНН]'}/${formData.kpp || '[КПП]'}
ОГРН: ${formData.ogrn || '[ОГРН]'}
Р/с: ${formData.accountNumber || '[Расчетный счет]'}
Банк: ${formData.bankName || '[Название банка]'}
БИК: ${formData.bik || '[БИК]'}
К/с: ${formData.correspondentAccount || '[Корреспондентский счет]'}
Телефон: ${formData.phone || '[Телефон]'}
Email: ${formData.email || '[Email]'}

____________________ / ${formData.representativeName || '[ФИО представителя]'} /
М.П.

Получающая сторона:
${formData.recipientName || '[Полное наименование контрагента/ФИО физического лица]'}
Юридический адрес: ${formData.recipientLegalAddress || '[Юридический адрес]'}
ИНН/КПП: ${formData.recipientInn || '[ИНН]'}/${formData.recipientKpp || '[КПП]'}
ОГРН: ${formData.recipientOgrn || '[ОГРН]'}
Р/с: ${formData.recipientAccountNumber || '[Расчетный счет]'}
Банк: ${formData.recipientBankName || '[Название банка]'}
БИК: ${formData.recipientBik || '[БИК]'}
К/с: ${formData.recipientCorrespondentAccount || '[Корреспондентский счет]'}
Телефон: ${formData.recipientPhone || '[Телефон]'}
Email: ${formData.recipientEmail || '[Email]'}

____________________ / ${formData.recipientRepresentativeName || '[ФИО представителя]'} /
М.П.`;

    default:
      return `Документ для типа "${type}" находится в разработке.`;
  }
}